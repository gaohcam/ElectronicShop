@using ElectronicShop_Model.Categories;
@using ElectronicShop_Model.Common;
@model PagedResult<CategoryInput>
@inject Microsoft.Extensions.Configuration.IConfiguration _config
@{
	ViewData["Title"] = "Danh mục";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
	<!-- Content Header (Page header) -->
	<div class="content-header">
		<div class="container-fluid">
			<div class="row mb-2">
				<div class="col-sm-6">
					<h1 class="m-0">Danh mục</h1>
				</div><!-- /.col -->
				<div class="col-sm-6">
					<ol class="breadcrumb float-sm-right">
						<li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
						<li class="breadcrumb-item active">Danh sách danh mục</li>
					</ol>
				</div><!-- /.col -->
			</div><!-- /.row -->
		</div><!-- /.container-fluid -->
	</div>
	<section class="content">
		<div class="container-fluid">
			<div class="card mb-12">
				<div class="card-body">
					<div class="row d-flex">
						@*<div class="p-2 flex-fill bd-highlight"><button type="button" class="btn btn-success" onclick="window.location.href='/Category/Create'">Tạo mới</button></div>*@
						<div class="p-2 flex-fill bd-highlight"><button id="openModalCreateCategory" type="button" data-toggle="modal" data-target="#modalCreateCategory" class="btn btn-success">Tạo mới</button></div>
						<div class="p-2 flex-fill bd-highlight col-6 col-sm-6 col-md-6 col-lg-6 col-xs-4">
							<form id="formSearchByKeyword" asp-action="Index" method="get">
								<input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
							</form>
						</div>
						<div class="p-2 bd-highlight"><button id="submit" class="btn btn-info"><i class="fa fa-search" aria-hidden="true"></i></button></div>
					</div>
				</div>
				<div class="card-body">
					<div class="table-responsive">
						<table class="table table-bordered" style="text-align: center;">
							<thead>
								<tr>
									<th>
										@Html.DisplayNameFor(model => model.Items.First().CategoryId)
									</th>
									<th>
										@Html.DisplayNameFor(model => model.Items.First().CategoryName)
									</th>
									<th>
										Chức năng
									</th>
								</tr>
							</thead>
							<tbody id="tblListCategory">
								@*@foreach (var item in Model.Items)
								{
									<tr>
										<td>
											@item.CategoryId
										</td>
										<td>
											@item.CategoryName
										</td>
									</tr>
								}*@
							</tbody>
						</table>
					</div>
					@*truyền Model PagedResult vào vì hàm InvokeAsync của class PagerViewComponent nhận 1
					tham số object PagedResult*@
					@await Component.InvokeAsync("Pager", Model)
				</div>
			</div>
		</div>
	</section>
</div>
<div class="modal fade" id="modalCreateCategory" tabindex="-1" role="dialog" aria-labelledby="modalCreateCategoryLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="card">
				<div class="card-header bg-info text-white">Mẫu nhập thông tin danh mục</div>
				<div class="card-body">
					<form id="formCreateCategory">
						<div class="form-group">
							<label>Tên danh mục</label>
							<input type="text" class="form-control" id="CategoryName" name="CategoryName" placeholder="Nhập tên danh mục" />
						</div>
					</form>
				</div>
			</div>
			<div class="modal-footer">
				<button id="createCategory" type="button" class="btn btn-primary">Tạo</button>
				<button id="closeModalCreateCategory" type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="modalInfoCategory" tabindex="-1" role="dialog" aria-labelledby="modalInfoCategoryLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="card">
				<div class="card-header bg-info text-white">Thông tin danh mục</div>
				<div class="card-body">
					<form id="formUpdateCategory">
						<div class="form-group">
							<label>Id danh mục</label>
							<input type="text" class="form-control" id="CategoryIdInfo" name="CategoryId" />
						</div>
						<div class="form-group">
							<label>Tên danh mục</label>
							<input type="text" class="form-control" id="CategoryNameInfo" name="CategoryName" placeholder="Nhập tên danh mục" />
						</div>
						<div class="form-group">
							<label>Ngày tạo</label>
							<input type="text" class="form-control" id="DateCreatedInfo" name="DateCreated" />
						</div>
						<div class="form-group">
							<label>Ngày sửa đổi</label>
							<input type="text" class="form-control" id="DateChangedInfo" name="DateChanged" />
						</div>
						<div class="form-group">
							<label>Người sửa đổi</label>
							<input type="text" class="form-control" id="UserChangedInfo" name="UserChanged" />
						</div>
					</form>
				</div>
			</div>
			<div class="modal-footer">
				<button id="updateCategory" type="button" class="btn btn-primary">Lưu</button>
				<button id="closeModalInfoCategory" type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script type="text/javascript">
		$('#submit').click(function () {
			$('#formSearchByKeyword').submit();
		});
	</script>

	@if (TempData.ContainsKey("Alert"))
	{
		<script type="text/javascript">
			$(document).ready(function () {
				Swal.fire({
					position: 'top-end',
					icon: 'success',
					title: '@TempData["Alert"].ToString()',
					showConfirmButton: false,
					timer: 1500
				})
			})
		</script>
	}

	<script type="text/javascript">
		$(document).ready(function () {
			LoadListCategory();
		});

		$('#createCategory').click(function () {
			let formCreateCategory = document.forms['formCreateCategory'];
			let formData = new FormData();
			formData.append('categoryName', formCreateCategory.CategoryName.value);
			$.ajax({
				url: 'https://localhost:5001/api/Categories/CreateCategory',
				type: 'POST',
				contentType: false,
				processData: false,
				enctype: 'multipart/form-data',
				headers: {
					'Authorization': 'Bearer @Context.Request.Cookies[Constants.TOKEN]'
				},
				data: formData,
				success: function (res) {
					LoadListCategory();
					$('#closeModalCreateCategory').click();
					Swal.fire({
						title: 'Thêm danh mục thành công!',
						text: "Bạn có muốn tiếp tục tạo danh mục mới ?",
						icon: 'question',
						showCancelButton: true,
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
						confirmButtonText: 'Tiếp tục tạo',
						cancelButtonText: 'Không'
					}).then((result) => {
						if (result.isConfirmed) {
							$('#CategoryName').val('');
							$('#openModalCreateCategory').click();
						}
					})
				},
				error: function (err) {
					Swal.fire({
						icon: 'error',
						title: 'Có lỗi xảy ra!',
						text: err.responseJSON.message + '!',
						confirmButtonText: 'Đã rõ'
					})
				}
			});
		});

		$(document).on('click', 'button[name="delete"]', function() {
			let categoryId = $(this).data('id');
			Swal.fire({
				title: 'Bạn chắc chắn muốn xóa danh mục này không?',
				text: "Bạn sẽ không hoàn tác được tác vụ này!",
				icon: 'warning',
				showCancelButton: true,
				confirmButtonColor: '#3085d6',
				cancelButtonColor: '#d33',
				confirmButtonText: 'Chắc chắn',
				cancelButtonText: 'Hủy'
			}).then((result) => {
				if (result.isConfirmed) {
					$.ajax({
						url: 'https://localhost:5001/api/Categories/DeleteCategory/' + categoryId,
						type: 'DELETE',
						headers: {
							'Authorization': 'Bearer @Context.Request.Cookies[Constants.TOKEN]'
						},
						success: function (res) {
							LoadListCategory();
							let timerInterval;
							Swal.fire({
								title: 'Xóa danh mục thành công!',
								html: 'Cửa sổ thông báo sẽ tự động đóng trong <b></b> giây.',
								timer: 1200,
								timerProgressBar: true,
								didOpen: () => {
									Swal.showLoading();
									const b = Swal.getHtmlContainer().querySelector('b');
									timerInterval = setInterval(() => {
										b.textContent = (Swal.getTimerLeft() / 1000).toFixed(0)
									}, 100);
								},
								willClose: () => {
									clearInterval(timerInterval);
								}
							});
						}
					});
				}
			});
		});

		$(document).on('click', 'button[name="view"]', function () {
			let categoryId = $(this).data('id');
			$.ajax({
				url: 'https://localhost:5001/api/Categories/GetCategoryByCategoryId/' + categoryId,
				type: 'GET',
				success: function (res) {
					$('#CategoryIdInfo').val(res.categoryId);
					$('#CategoryNameInfo').val(res.categoryName);
					$('#DateCreatedInfo').val(res.dateCreated);
					$('#DateChangedInfo').val(res.dateChanged);
					$('#UserChangedInfo').val(res.userChanged);

					$('#CategoryIdInfo').prop('readonly', true);
					$('#CategoryNameInfo').prop('readonly', true);
					$('#DateCreatedInfo').prop('readonly', true);
					$('#DateChangedInfo').prop('readonly', true);
					$('#UserChangedInfo').prop('readonly', true);

					$('#updateCategory').hide();
				}
			});
		});

		$(document).on('click', 'button[name="update"]', function () {
			let categoryId = $(this).data('id');
			$.ajax({
				url: 'https://localhost:5001/api/Categories/GetCategoryByCategoryId/' + categoryId,
				type: 'GET',
				success: function (res) {
					$('#CategoryIdInfo').val(res.categoryId);
					$('#CategoryNameInfo').val(res.categoryName);
					$('#DateCreatedInfo').val(res.dateCreated);
					$('#DateChangedInfo').val(res.dateChanged);
					$('#UserChangedInfo').val(res.userChanged);

					$('#CategoryIdInfo').prop('readonly', true);
					$('#CategoryNameInfo').prop('readonly', false);
					$('#DateCreatedInfo').prop('readonly', true);
					$('#DateChangedInfo').prop('readonly', true);
					$('#UserChangedInfo').prop('readonly', true);

					$('#updateCategory').show();
				}
			});
		});

		$('#updateCategory').click(function () {
			let formUpdateCategory = document.forms['formUpdateCategory'];
			let formData = new FormData();
			formData.append('categoryName', formUpdateCategory.CategoryName.value);
			$.ajax({
				url: 'https://localhost:5001/api/Categories/UpdateCategory/' + formUpdateCategory.CategoryId.value,
				type: 'PUT',
				contentType: false,
				processData: false,
				enctype: 'multipart/form-data',
				headers: {
					'Authorization': 'Bearer @Context.Request.Cookies[Constants.TOKEN]'
				},
				data: formData,
				success: function (res) {
					LoadListCategory();
					Swal.fire({
						position: 'top-end',
						icon: 'success',
						title: 'Cập nhật thông tin danh mục thành công',
						showConfirmButton: false,
						timer: 1000
					})
					$('#closeModalInfoCategory').click();
				},
				error: function (err) {
					Swal.fire({
						icon: 'error',
						title: 'Có lỗi xảy ra!',
						text: err.responseJSON.message + '!',
					})
					console.log(err);
				}
			});
		});

		function LoadListCategory() {
			let urlParams = new URLSearchParams(window.location.search);
			let pageIndex = urlParams.get('pageIndex');
			if (pageIndex == null) pageIndex = 1;
			let keyword = urlParams.get('keyword');
			$.ajax({
				url: 'https://localhost:5001/api/Categories/GetCategoriesPaging',
				type: 'GET',
				headers: {
					'Authorization': 'Bearer @Context.Request.Cookies[Constants.TOKEN]'
				},
				data: {
					Keyword: keyword,
					PageIndex: pageIndex,
					PageSize: 10
				},
				success: function (res) {
					$('#tblListCategory').empty();
					$.each(res.resultObj.items, function (key, value) {
						let tr = '<tr>';
						tr += '<td class="col-sm-5">' + value.categoryId + '</td>';
						tr += '<td class="col-sm-4">' + value.categoryName + '</td>';
						tr += '<td class="col-sm-3">';
						tr += '<button data-toggle="modal" data-target="#modalInfoCategory" type="button" class="btn btn-info mr-3" name="view" data-id=' + value.categoryId + '><i class="fas fa-info-circle" aria-hidden="true"></i></button>';
						tr += '<button data-toggle="modal" data-target="#modalInfoCategory" type="button" class="btn btn-warning mr-3" name="update" data-id=' + value.categoryId + '><i class="far fa-edit" aria-hidden="true"></i></button>';
						tr += '<button type="button" class="btn btn-danger" name="delete" data-id=' + value.categoryId + '><i class="fas fa-trash" aria-hidden="true"></i></button>';
						tr += '</td>';
						tr += '</tr>';
						$('#tblListCategory').append(tr);
					});
				},
			});
		}
	</script>
}